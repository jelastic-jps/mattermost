type: install
name: Mattermost Chat Service
version: 1.7
id: mattermost

categories: ["apps/dev-and-admin-tools", "apps/popular", "apps/collaboration"]

displayName: Mattermost
homepage: https://mattermost.com/
logo: images/mattermost-logo-small.png
description: Mattermost is an open-source, self-hostable online chat service with file sharing, search, and integrations. It is designed as an internal chat for organisations and companies, and mostly markets itself as an open-source alternative to Slack.
ssl: true

baseUrl: https://raw.githubusercontent.com/jelastic-jps/mattermost/master

nodes:
  - nodeType: nginxphp
    nodeGroup: cp
    cloudlets: 16
    diskLimit: 50G

  - nodeType: postgresql
    nodeGroup: sqldb
    cloudlets: 16
    diskLimit: 20G

globals:
  config: /opt/mattermost/config/config.json
  
mixins:
 - configs/vers.yaml

onInstall:
  - deployApp
  - manageMattermostUser
  - generatePassword
  - createDB
  - configureMattermost

onAfterRedeployContainer [cp]: configureMattermost

actions:
  deployApp:
    - deploy:
        archive: https://releases.mattermost.com/6.0.2/mattermost-${globals.version_mattermost}-linux-amd64.tar.gz
        context: ROOT
        name: mattermost-${globals.version_mattermost}-linux-amd64.tar.gz
    - cmd [cp]: mkdir /opt/mattermost; mkdir /opt/mattermost/data; cd /opt/mattermost; ln -s /var/www/webroot/ROOT/* .
      user: root

  manageMattermostUser:
    cmd [cp]: |-
      useradd --system --user-group mattermost
      chown -R mattermost:mattermost /opt/mattermost
      chown -R mattermost:mattermost /var/www/webroot/ROOT
      chmod -R g+w /opt/mattermost
      restorecon -R /opt/mattermost
    user: root
      
  generatePassword:
    - script: "return {result: 0, password: '${fn.password(5)}'.toUpperCase() + '~!@#$%^&*()'['${fn.random(10)}'] + '${fn.password(5)}'.toLowerCase() + '${fn.random(10)}' };"
    - setGlobals:
        ADMIN_PASS: ${response.password}
        PG_PASSWORD: ${nodes.sqldb.password}
   
  createDB:
    - cmd[sqldb]:
       - jem passwd set -p "${globals.PG_PASSWORD}"
       - export PGPASSWORD='${globals.PG_PASSWORD}'; psql -U webadmin -d postgres -c "SELECT 1 FROM pg_database WHERE datname = 'mattermost'" | grep -q 1 || psql -U webadmin -d postgres -c "CREATE DATABASE mattermost;"
      user: root
  
  configureMattermost:
  - log: PostgreSQL password configuration
  - cmd[cp]: |-
      setcap cap_net_bind_service=+ep /opt/mattermost/bin/mattermost
      sed -i  -e 's/mmuser:mostest/webadmin:${globals.PG_PASSWORD}/g'  -e  's|"SiteURL": \"\",|"SiteURL": "'${env.url}'",|g'  -e  's|localhost/mattermost_test|sqldb:5432/mattermost|g' -e  's/charset=utf8mb4,utf8&readTimeout=30s&writeTimeout=30s/sslmode=disable&connect_timeout=10/g'  -e  's|"ListenAddress": ":8000",|"ListenAddress": ":80",|g' ${globals.config}
      sed -i 's|"EnableLocalMode": .*|"EnableLocalMode": true,|g' ${globals.config}
      sed -i 's|index  index.html index.htm index.php;|index  index.html index.htm index.php;\n\n    proxy_pass http://localhost:8065/;|g' /etc/nginx/conf.d/sites-enabled/default.conf
    user: root
  - restartContainers [cp]
  - cmd[cp]: |-
      sudo curl -fsSL "${baseUrl}/configs/mattermost.service" -o /etc/systemd/system/mattermost.service
      chmod 644 /etc/systemd/system/mattermost.service
      systemctl daemon-reload
      systemctl enable mattermost
      systemctl start mattermost
      EMAIL="${user.email}" && EMAIL=${EMAIL%%@*} && echo ${EMAIL%%+*}
    user: root
  - setGlobals:
      username: ${response.out}
  - cmd[cp]: |-
      while [ ! -S /var/tmp/mattermost_local.socket ]; do sleep 3; done
      /opt/mattermost/bin/mmctl user create --firstname ${globals.username} --system-admin --email ${user.email} --username ${globals.username} --password '${globals.ADMIN_PASS}' --local
    user: root

success: |
  ### Mattermost is ready
  **URL** : [https://${env.domain}](https://${env.domain})  
  **Admin email** : ${user.email}  
  **Admin username** : ${globals.username}  
  **Password** : ${globals.ADMIN_PASS}  

  The instructions below can help you with further managing your online chat system:

  * [Attach Public IP](https://docs.jelastic.com/public-ip)
  * [Bind custom domain](https://docs.jelastic.com/custom-domains/#configure-dns)
  * [Share access to the environment](http://docs.jelastic.com/share-environment)
  * [Adjust automatic vertical scaling settings](http://docs.jelastic.com/automatic-vertical-scaling)
  * [Monitor the statistics](http://docs.jelastic.com/view-app-statistics) & [view log files](https://docs.jelastic.com/view-log-files)
  * [Access environment via SSH](https://docs.jelastic.com/ssh-access)
  
  To add custom domain name for your Mattermost installation follow the steps described in our [documentation](http://docs.jelastic.com/custom-domains)
